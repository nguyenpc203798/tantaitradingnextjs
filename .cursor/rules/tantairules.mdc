---
description: 
globs: 
alwaysApply: true
---
## Project Structure

- Use Next.js App Router structure.

- All source code is located inside the src folder.

## Language & Module System

- Use TypeScript with ES Modules.

## SOLID Principles

- Ensure adherence to SOLID principles for clean, readable, and maintainable code.

## React Design Patterns

- Provider Pattern for Context API: Efficient global state management.

- Strategy Pattern: Reusable logic encapsulation to facilitate flexible and interchangeable behaviors.

- Decorator Pattern (HOC): Enhance components with additional responsibilities dynamically.

## Rendering Methods

- Implement Static Site Generation (SSG) using getStaticProps for static pages.

- Use Incremental Static Regeneration (ISR) for dynamically updating content.

## Performance Optimization

- Apply lazy loading and code splitting via next/dynamic to load components only when necessary.

- Optimize images with Next.js's built-in <Image> component.

## Navigation

- Utilize <Link> components for navigation.

## Clear Separation of Concerns

- Components: Reusable UI elements (components).

- Layouts: Common layout wrappers (layouts).

- Pages: Application-specific views (app).

- Business Logic: Clearly separated into services and hooks (services, hooks).

 ## Coding Standards

- Write explicit and clear type definitions.

- Ensure the codebase is self-documenting, with meaningful comments.

- Prefer @ for path aliases to simplify imports.

## Code Explanation Standard

- Clearly explain code with simple language, include practical examples, and always provide the output/result after executing the provided example code.
Responsiveness

## Always ensure responsiveness within source code:

"Always pay attention to responsiveness in the source code to ensure good performance across all devices."